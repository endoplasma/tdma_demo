# -*- makefile -*-

.SUFFIXES:

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI)/cpu/stm32f407

### Define the source directories and files
CONTIKI_CPU_DIRS = . \
		 VCP \
		 CMSIS/Include/ \
		 CMSIS/Device/ST/STM32F4xx/Include \
		 STM32_USB_Device_Library/Class/cdc/inc \
		 STM32_USB_Device_Library/Class/cdc/src \
		 STM32_USB_Device_Library/Core/inc \
		 STM32_USB_Device_Library/Core/src \
		 STM32_USB_OTG_Driver/inc \
		 STM32_USB_OTG_Driver/src 

RADIO_CHIP_DIR = $(CONTIKI)/cpu/avr/radio/rf230bb

CONTIKI_CPU_DIRS += $(RADIO_CHIP_DIR)

## C Code Files
STM32F_C = clock.c nvic.c random.c system_stm32f4xx.c unique_id.c	\
	          usart3.c usart3-putchar.c watchdog.c rtimer-arch.c	\
	          uart4.c uart4-putchar.c usb_bsp.c usbd_cdc_vcp.c	\
	          usbd_desc.c usbd_usr.c usb_core.c usb_dcd.c  usb_dcd_int.c	\
	          usbd_core.c usbd_ioreq.c usbd_req.c usbd_cdc_core.c	\
	          vcp_putchar.c newlib-syscalls.c


## Assembler Files
STM32F_S = startup_stm32f4xx.s

# .s and .s79 not specified here because in Makefile.include only .c and .S suffixes are replaced with .o.
CONTIKI_TARGET_SOURCEFILES += $(STM32F_C) 

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)

### Compiler definitions
# GCC
#GCC_NAME = /home/psp/sat/bin/arm-none-eabi-
#GCC_NAME = /home/psp/Downloads/gcc-arm-none-eabi-4_7-2012q4/bin/arm-none-eabi-
GCC_NAME = arm-none-eabi-
CC	 = $(GCC_NAME)gcc
LD       = $(GCC_NAME)gcc
AS	 = $(GCC_NAME)gcc
NM	 = $(GCC_NAME)nm
AR       = $(GCC_NAME)ar
OBJCOPY  = $(GCC_NAME)objcopy
STRIP    = $(GCC_NAME)strip
SIZE     = $(GCC_NAME)size
ifndef DEBUG
#OPTI = -Os -ffunction-sections 
#elseif
#generate debug informations
#OPTI = -g
endif #DEBUG

CFLAGSNO = -mthumb \
	   -mcpu=cortex-m4 \
	   -g \
	   -D __MICROLIB \
	   -D __STM32F407__ \
	   -D RF231_HAS_PA="1" \
	   -D HSE_VALUE="8000000" \
	   -D DISCOVERY="1" \
	   -D AUTOSTART_ENABLE \


# KEIL Flags
#-I..\..\cpu\stm32f407 
#-I..\..\platform\stm32f4-discovery		\
#-I..\..\cpu\avr\radio\rf230bb 
#-I..\..\core 
#-I..\..\core\dev		\
#-I..\..\core\lib 
#-I..\..\core\net 
#-I..\..\core\net\mac			\
#-I..\..\core\net\rime 
#-I..\..\core\net\rpl 
#-I..\..\core\sys		\
#-I..\..\core\cfs 
#-I..\..\core\ctk 
#-I..\..\core\loader			\
#-I..\..\cpu\stm32f407\VCP						\
#-I..\..\cpu\stm32f407\STM32_USB_Device_Library\Class\cdc\inc		\
#-I..\..\cpu\stm32f407\STM32_USB_Device_Library\Core\inc			\
#-I..\..\cpu\stm32f407\STM32_USB_OTG_Driver\inc 
#-I C:\Keil\ARM\RV31\Inc 
#-I C:\Keil\ARM\CMSIS\Include 
#-I C:\Keil\ARM\Inc\ST\STM32F4xx 
#-o ".\Flash\*.o"		\
#--omf_browse ".\Flash\*.crf" --depend ".\Flash\*.d"

CFLAGS  += $(CFLAGSNO) $(OPTI)

ASFLAGS = -mthumb -mcpu=cortex-m3 -c -g -Wall -Os -ffunction-sections \
	    -mlittle-endian -fshort-enums -x assembler-with-cpp -Wa,-EL

# KEIL linker Flags
#--cpu Cortex-M4 *.o 
#--library_type=microlib 
#--strict 
#--scatter ".\Flash\contiki.sct" 
#--summary_stderr 
#--info summarysizes 
#--map 
#--xref 
#--callgraph 
#--symbols 
#--info sizes --info totals --info unused --info veneers 
#Â --list ".\Flash\contiki.map" 
#-o ".\Flash\contiki.axf"

# gnu.ld
	    #-Wl,-static 

LDFLAGS += -mcpu=cortex-m4 \
	    -mthumb  \
	    -Wl,-T$(CONTIKI_CPU)/stm32_flash.ld \
	    -u Default_Handler \
	    -nostartfiles \
	    -fno-exceptions -ffunction-sections -fdata-sections \

           # -nostartfiles -Wl,--gc-sections \
	   -nodefaultlibs
#LDFLAGS += -mcpu=cortex-m4 \
#	    -mthumb  \
#	    -Wl,-T -Xlinker $(CONTIKI_CPU)/stm32_flash.ld \
#	    -u Default_Handler \
#	    -nostartfiles \
#	    -Wl,-Map -Xlinker contiki-$(TARGET).map
#
ifndef ELF_LOADER
 # Do not use garbage collection when the elfloader is used.
# LDFLAGS += -Wl,--gc-sections
endif  #ELF_LOADER

SIZEFLAGS = -A
OBJOPTS = -O binary


### Custom rules

OBJECTDIR = obj_$(TARGET)

ssubst = ${patsubst %.s,%.o,${patsubst %.s79,%.o,$(1)}}

CONTIKI_OBJECTFILES += ${addprefix $(OBJECTDIR)/,${call ssubst, $(STM32F_S)}}

vpath %.s $(CONTIKI_CPU)/

#CUSTOM_RULE_LINK = 1
#
#%.$(TARGET): %.co $(PROJECT_OBJECTFILES) $(PROJECT_LIBRARIES) contiki-$(TARGET).a 
#	$(LD) $(LDFLAGS) $(TARGET_STARTFILES) ${filter-out %.a,$^} -Wl,-\( ${filter %.a,$^} $(TARGET_LIBFILES) -Wl,-\) -o $@.elf
#	echo >> contiki-$(TARGET).map
#	$(SIZE) $(SIZEFLAGS) $@.elf >> contiki-$(TARGET).map
#	$(OBJCOPY) $(OBJOPTS) $@.elf $@.bin 

#$(OBJECTDIR)/%.o: %.s79
#	$(AS) $(ASFLAGS) -o $@ $<

$(OBJECTDIR)/%.o: %.s
	$(AS) $(ASFLAGS) -o $@ $<	

